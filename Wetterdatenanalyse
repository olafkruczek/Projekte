import os
import requests
import matplotlib.pyplot as plt
from matplotlib.widgets import TextBox, Button, CheckButtons, RadioButtons
from datetime import datetime as dt

#Hier wird die Erklärung mit einer Funktion schonmal hergestellt und wird 
#danach nur noch aufgerufen und damit ausgeführt

              ### Erklärung

def Erklaerung():
    # Macht ein Fenster, dass einen bestimmten Namen tragen soll
    plt.figure("Grafische Aufbereitung von Wetterdaten")

    # sorgt dafür, dass man kein Koordinatensystem hat
    plt.axis("off")
    # macht einen Text mit Eckkoordinaten (x, y) und positiniert
    # das ganze richtig, mit größerer Schriftgröße
    plt.text(0.05, 0.5,
             "Das Programm erzeugt Diagramme mit aktuellen\n"
             "Wetterdaten der letzten Tage.\n"
             "Geben Sie an, für welche Messwerte die Diagramme\n"
             "angezeigt werden sollen und wie viele Tage\n"
             "berücksichtigt werden sollen.\n\n"
             "Klicken sie HIER, um Ihre Auswahl zu treffen",
             ha="left", va="center", fontsize="larger")
    # Schließt das Fenster sobald man etwas drückt
    plt.ginput(timeout=0)
    plt.close()

              ### Voreinstellungen

def Einstellung():
    plt.figure("Grafische Aufbereitung von Wetterdaten")
    plt.axis("off")  
    plt.text(0.03, 1, "1)   Geben Sie die Anzahl der Tage ein:\n"
             "                  (Max. 365 Tage)\n", 
             ha="left", va="top", fontsize="larger")

    axTextBox = plt.axes([0.8, 0.825, 0.05, 0.05])      
    global TextBox1
    TextBox1 = TextBox(axTextBox, "Tage", label_pad=0.5)

    axButton1 = plt.axes([0.35, 0.1, 0.3, 0.1])
    Button1 = Button(axButton1, "Weiter zum Plotten")
    Button1.on_clicked(Weiter)

    plt.text(-0.7, 6, " 2)   Wählen Sie eine der Folgenden Messwerte aus:\n"
             "                    (Max. 1 Auswahl treffen)",\
             fontsize="larger")

    global RadioButton1

    global Labels1 
    Labels1 = ["Stickstoffmonoxid (NO)", "Stickstoffdioxid (N02)",\
               "Ozon (O3)", "Partikel (PM 10)", "Schwefeldioxid (SO2)",\
               "Temperatur", "Relative Luftfeuchtigkeit",\
               "Windgeschwindigkeit", "Windrichtung"]

    
    axRadioButton1 = plt.axes([0.3, 0.22, 0.4, 0.45])
    RadioButton1 = RadioButtons(axRadioButton1, Labels1, active=0)

    plt.show()


def Weiter(event):
    Update(TextBox1.text)
    
       
def Update(Text):
    try:
       Tage = int(Text)
       if Tage > 365 or Tage == 0 or Text == "":
              plt.figure("Fehlermeldung", figsize=[7,0.7])
              plt.axis("off")
              plt.text(0, 0.5, "Sie haben mehr als 365 Tage oder"\
                       " den Wert 0 ausgewählt!\n",\
                      fontsize="larger", color="red")
              plt.text(0, 0.1,\
                      "Drücken Sie eine beliebeige Taste, um fortzufahren.")
              plt.ginput(timeout=0)
              plt.close()
       else:
              global TB_Tage
              TB_Tage = Tage
              global MW
              MW = Labels1.index(RadioButton1.value_selected)
              plt.close()
    except ValueError:
              plt.figure("Fehlermeldung", figsize=[7,0.7])
              plt.axis("off")
              plt.text(0, 0.5, "Sie haben keine Zahl eigegeben!",\
                      fontsize="larger", color="red")
              plt.text(0, 0.1,\
                      "Drücken Sie eine beliebeige Taste, um fortzufahren")
              plt.ginput(timeout=0)
              plt.close()


Links = ["https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/NO_AM1H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/NO2_AM1H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/O3_AM1H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/PM10F_GM24H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/SO2_AM1H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/T_AM1H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/F_AM1H.csv",   
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/WG_SM1H.csv",
         "https://www.lanuv.nrw.de/fileadmin/lanuv/luft/temes/WR_VM1H.csv"]

        
Erklaerung()
Einstellung()


# ab hier sind alle Voreinstellungen getroffen worden und es kann das 
# Programm zur Sortierung und zum Plotten beginnen

              ### Hauptprogramm

Link_T = requests.get(Links[MW])

open(f"{os.path.abspath(os.getcwd())}\Datei.csv", "wb").write(Link_T.content)

with open("Datei.csv", "r", encoding ="latin1") as T:
    
       y_Werte = []
       Werte_T = []
       Zeilen_T = []
       Zeilen_T1 = []
       Zeilen_T2 = []
       Inhalt_T = T.read()
       Zeilen_T = Inhalt_T.split("\n")
       Zeilen_T1 = [item.replace(",", ".") for item in Zeilen_T]
       Zeilen_T2 = [item.replace("<4", "4").replace("<7", "7")\
              .replace("<10", "10") for item in Zeilen_T1]
      
       Anzahl_Stationen =[59, 59, 29, 56, 9, 24, 24, 34, 34] 
       x_Werte = []
       alle_y = []

       Colors = ["Black", "bisque", "forestgreen", "slategrey", "darkorange",\
              "limegreen", "burlywood", "darkgreen", "cornflowerblue",\
              "tan",
              "royalblue", "lime", "seagreen", "midnightblue", "gray",\
              "navy", "springgreen", "orange", "blue", "aquamarine",\
              "turquoise", "slateblue", "darkgoldenrod", "gold", "brown",\
              "mediumpurple", "teal", "plum", "lightcoral", "maroon",\
              "rosybrown", "indigo", "red", "darkkhaki", "mediumorchid",\
              "cyan", "violet", "olive", "salmon", "yellowgreen",\
              "yellow", "magenta", "deepskyblue", "orangered", "sienna",\
              "chocolate", "olivedrab", "steelblue", "orchid", "fuchsia",\
              "crimson", "lawngreen", "saddlebrown", "deeppink", "peru",\
              "darkred", "darkolivegreen"]      

       # Sortierschleife

       for c in range(2,int(Anzahl_Stationen[MW])):
              Werte_T.clear()
              x_Werte.clear()
              y_Werte.clear()

              l = len(Zeilen_T2) - TB_Tage*24-1
              for i in range(l, len(Zeilen_T2)):
                     Eintraege = Zeilen_T2[i].split(";")
                     Werte_T.append(Eintraege)
              #del Werte_T[-1] 
          
              for j in range(len(Werte_T)-1):
                     try:
                            y_Werte.append(float(Werte_T[j][c]))
                     except ValueError:
                            y_Werte.append(None) 
              try:
                     for Datum, Uhrzeit, *Messwert in Werte_T:
                            if Uhrzeit == "24:00":
                                   Uhrzeit = "23:59"  
                            x_Werte.append(dt.strptime(f"{Datum} {Uhrzeit}",\
                                    "%d.%m.%Y %H:%M"))
              except ValueError:
                     pass
       
              alle_y.append(y_Werte.copy())    
        
       fig, ax = plt.subplots()   
       Groese = plt.get_current_fig_manager()
       Groese.window.state("zoomed")

      # durch das Komma nach p können wir Eigenschaften von p im nachhinein
      # ändern
      # wenn das Objekt ax.plot ein Tuple ausgibt, muss man ein Komma setzen

       if MW == 0 or MW == 1:

              Stationen = ["Aachen", "Bielefeld (Ost)", "Bonn",\
                     "Borken-Gemen",
                     "Bottrop", "Köln", "Datteln(HG)", "D-Dorf(CS)",\
                     "Dortmund-Eving", "Duisburg(BH)", "Duisburg(Hafen)",\
                     "D-Dorf(Eller)", "Simmerath", "Essen-Schuir",\
                     "Elsdorf", "Essen(VH)", "Gelsenkirchen(BM)",\
                     "Hattingen(BS)", "Hürth", "Jackerath", "Jüchen(HNK)",\
                     "Krefeld", "Leverkusen(MF)", "D-Dorf(L)", \
                     "Mönchengladbach", "Münster(G)", "Nettetal(KK)",\
                     "Lünen", "Ratingen(TB)", "Köln(RD)", "Nepthen",\
                     "Schwerte", "Soest", "Solingen", "Mülheim(ST)",\
                     "Unna", "Aachen(WS)", "Bielefeld(DS)", \
                     "Bielefeld(HS)", "Dortmund(BS)", "Duisburg(KGS)",\
                     "Essen(GS)", "Essen-Ost", "Gelsenkirchen(KSS)",\
                     "Gladbeck(GS)", "Hagen(GvGR)", "Köln(Ring)",\
                     "Köln(Turnier)", "Leverkusen(GHS)",\
                     "Mönchengladbach(FES)", "Münster(WS)", \
                     "Oberhausen(MS)", "Solingen(KAS)", "Wuppertal(G)",\
                     "Duisburg(WS)", "Warstein", "Wuppertal(LF)"]

              AA, = ax.plot(x_Werte, alle_y[0], linewidth=2,\
                      color=Colors[0], label=Stationen[0])
              BIO, = ax.plot(x_Werte, alle_y[1], linewidth=2,\
                      color=Colors[1], label=Stationen[1])
              BN, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                      color=Colors[2], label=Stationen[2])
              BOG, = ax.plot(x_Werte, alle_y[3], linewidth=2,\
                      color=Colors[3], label=Stationen[3])
              BOT, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                      color=Colors[4], label=Stationen[4])
              K, = ax.plot(x_Werte, alle_y[5], linewidth=2,\
                      color=Colors[5], label=Stationen[5])
              DAHG, = ax.plot(x_Werte, alle_y[6], linewidth=2,\
                      color=Colors[6], label=Stationen[6])
              DDCS, = ax.plot(x_Werte, alle_y[7], linewidth=2,\
                      color=Colors[7], label=Stationen[7])
              DOE, = ax.plot(x_Werte, alle_y[8], linewidth=2,\
                      color=Colors[8], label=Stationen[8])
              DUBH, = ax.plot(x_Werte, alle_y[9], linewidth=2,\
                      color=Colors[9], label=Stationen[9])
              DUH, = ax.plot(x_Werte, alle_y[10], linewidth=2,\
                      color=Colors[10], label=Stationen[10])
              DDE, = ax.plot(x_Werte, alle_y[11], linewidth=2,\
                      color=Colors[11], label=Stationen[11])
              SI, = ax.plot(x_Werte, alle_y[12], linewidth=2,\
                      color=Colors[12], label=Stationen[12])
              ES, = ax.plot(x_Werte, alle_y[13], linewidth=2,\
                      color=Colors[13], label=Stationen[13])
              ELS, = ax.plot(x_Werte, alle_y[14], linewidth=2,\
                      color=Colors[14], label=Stationen[14])
              EVH, = ax.plot(x_Werte, alle_y[15], linewidth=2,\
                      color=Colors[15], label=Stationen[15])
              GEBM, = ax.plot(x_Werte, alle_y[16], linewidth=2,\
                      color=Colors[16], label=Stationen[16])
              HABS, = ax.plot(x_Werte, alle_y[17], linewidth=2,\
                      color=Colors[17], label=Stationen[17])
              HUE, = ax.plot(x_Werte, alle_y[18], linewidth=2,\
                      color=Colors[18], label=Stationen[18])
              JA, = ax.plot(x_Werte, alle_y[19], linewidth=2,\
                      color=Colors[19], label=Stationen[19])
              JHNK, = ax.plot(x_Werte, alle_y[20], linewidth=2,\
                      color=Colors[20], label=Stationen[20])
              KRE, = ax.plot(x_Werte, alle_y[21], linewidth=2,\
                      color=Colors[21], label=Stationen[21])
              LEMF, = ax.plot(x_Werte, alle_y[22], linewidth=2,\
                      color=Colors[22], label=Stationen[22])
              DDL, = ax.plot(x_Werte, alle_y[23], linewidth=2,\
                      color=Colors[23], label=Stationen[23])
              MG, = ax.plot(x_Werte, alle_y[24], linewidth=2,\
                      color=Colors[24], label=Stationen[24])
              MÜG, = ax.plot(x_Werte, alle_y[25], linewidth=2,\
                      color=Colors[25], label=Stationen[25])
              NEKK, = ax.plot(x_Werte, alle_y[26], linewidth=2,\
                      color=Colors[26], label=Stationen[26])
              LUE, = ax.plot(x_Werte, alle_y[27], linewidth=2,\
                      color=Colors[27], label=Stationen[27])
              RATB, = ax.plot(x_Werte, alle_y[28], linewidth=2,\
                      color=Colors[28], label=Stationen[28])
              KRD, = ax.plot(x_Werte, alle_y[29], linewidth=2,\
                      color=Colors[29], label=Stationen[29])
              NE, = ax.plot(x_Werte, alle_y[30], linewidth=2,\
                      color=Colors[30], label=Stationen[30])
              SCH, = ax.plot(x_Werte, alle_y[31], linewidth=2,\
                      color=Colors[31], label=Stationen[31])
              SOE, = ax.plot(x_Werte, alle_y[32], linewidth=2,\
                      color=Colors[32], label=Stationen[32])
              SOL, = ax.plot(x_Werte, alle_y[33], linewidth=2,\
                      color=Colors[33], label=Stationen[33])
              MST, = ax.plot(x_Werte, alle_y[34], linewidth=2,\
                      color=Colors[34], label=Stationen[34])
              UN, = ax.plot(x_Werte, alle_y[35], linewidth=2,\
                      color=Colors[35], label=Stationen[35])
              AAWS, = ax.plot(x_Werte, alle_y[36], linewidth=2,\
                      color=Colors[36], label=Stationen[36])
              BDS, = ax.plot(x_Werte, alle_y[37], linewidth=2,\
                      color=Colors[37], label=Stationen[37])
              BHS, = ax.plot(x_Werte, alle_y[38], linewidth=2,\
                      color=Colors[38], label=Stationen[38])
              DOBS, = ax.plot(x_Werte, alle_y[39], linewidth=2,\
                      color=Colors[39], label=Stationen[39])
              DUKG, = ax.plot(x_Werte, alle_y[40], linewidth=2,\
                      color=Colors[40], label=Stationen[40])
              EGS, = ax.plot(x_Werte, alle_y[41], linewidth=2,\
                      color=Colors[41], label=Stationen[41])
              EO, = ax.plot(x_Werte, alle_y[42], linewidth=2,\
                      color=Colors[42], label=Stationen[42])
              GEK, = ax.plot(x_Werte, alle_y[43], linewidth=2,\
                      color=Colors[43], label=Stationen[43])
              GGS, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                      color=Colors[44], label=Stationen[44])
              HAG, = ax.plot(x_Werte, alle_y[45], linewidth=2,\
                      color=Colors[45], label=Stationen[45])
              KR, = ax.plot(x_Werte, alle_y[46], linewidth=2,\
                      color=Colors[46], label=Stationen[46])
              KT, = ax.plot(x_Werte, alle_y[47], linewidth=2,\
                      color=Colors[47], label=Stationen[47])
              LEGH, = ax.plot(x_Werte, alle_y[48], linewidth=2,\
                      color=Colors[48], label=Stationen[48])
              MGFE, = ax.plot(x_Werte, alle_y[49], linewidth=2,\
                      color=Colors[49], label=Stationen[49])
              MWS, = ax.plot(x_Werte, alle_y[50], linewidth=2,\
                      color=Colors[50], label=Stationen[50])
              OBMS, = ax.plot(x_Werte, alle_y[51], linewidth=2,\
                      color=Colors[51], label=Stationen[51])
              SOKA, = ax.plot(x_Werte, alle_y[52], linewidth=2,\
                      color=Colors[52], label=Stationen[52])
              WUG, = ax.plot(x_Werte, alle_y[53], linewidth=2,\
                      color=Colors[53], label=Stationen[53])
              DUWS, = ax.plot(x_Werte, alle_y[54], linewidth=2,\
                      color=Colors[54], label=Stationen[54])
              WAR, = ax.plot(x_Werte, alle_y[55], linewidth=2,\
                      color=Colors[55], label=Stationen[55])
              WULF, = ax.plot(x_Werte, alle_y[56], linewidth=2,\
                      color=Colors[56], label=Stationen[56])

              Station = [AA, BIO, BN, BOG, BOT, K, DAHG, DDCS, DOE, DUBH, DUH,\
                     DDE, SI, ES, ELS, EVH, GEBM, HABS, HUE, JA, JHNK, KRE,\
                     LEMF, DDL, MG, MÜG, NEKK, LUE, RATB, KRD, NE, SCH, SOE,\
                     SOL, MST, UN, AAWS, BDS, BHS, DOBS, DUKG, EGS, EO,\
                     GEK, GGS, HAG, KR, KT, LEGH, MGFE, MWS, OBMS, SOKA,\
                     WUG, DUWS, WAR, WULF]              

       elif MW == 2:   

              Stationen = ["Aachen", "Bielefeld (Ost)", "Borken-Gemen",\
                     "Bottrop", "Köln", "Dortmund-Eving", "D-Dorf(Eller)",\
                     "Simmerath", "Essen-Schuir", "Hürth", "Krefeld(L)",\
                     "Leverkusen(MF)", "D-Dorf(L)", "Mönchengladbach",\
                     "Münster(G)", "Lünen", "Niederzier", "Ratingen(TB)",\
                     "Köln(RD)", "Nepthen", "Schwerte", "Marl(SM)",\
                     "Soest", "Solingen", "Mülheim(ST)", "Duisburg(WS)",\
                     "Wuppertal(LF)"]

              AA, = ax.plot(x_Werte, alle_y[0], linewidth=2,\
                      color=Colors[0], label=Stationen[0])
              BIO, = ax.plot(x_Werte, alle_y[1], linewidth=2,\
                      color=Colors[1], label=Stationen[2])
              BOG, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                      color=Colors[2], label=Stationen[2])
              BOT, = ax.plot(x_Werte, alle_y[3], linewidth=2,\
                      color=Colors[2], label=Stationen[3])
              K, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                      color=Colors[4], label=Stationen[4])
              DOE, = ax.plot(x_Werte, alle_y[5], linewidth=2,\
                      color=Colors[5], label=Stationen[5])
              DDE, = ax.plot(x_Werte, alle_y[6], linewidth=2,\
                      color=Colors[6], label=Stationen[6])
              SI, = ax.plot(x_Werte, alle_y[7], linewidth=2,\
                      color=Colors[7], label=Stationen[7])
              ES, = ax.plot(x_Werte, alle_y[8], linewidth=2,\
                      color=Colors[8], label=Stationen[8])
              HUE, = ax.plot(x_Werte, alle_y[9], linewidth=2,\
                      color=Colors[9], label=Stationen[9])
              KRL, = ax.plot(x_Werte, alle_y[10], linewidth=2,\
                      color=Colors[10], label=Stationen[10])
              LEMF, = ax.plot(x_Werte, alle_y[11], linewidth=2,\
                      color=Colors[11], label=Stationen[11])
              DDL, = ax.plot(x_Werte, alle_y[12], linewidth=2,\
                      color=Colors[12], label=Stationen[12])
              MG, = ax.plot(x_Werte, alle_y[13], linewidth=2,\
                      color=Colors[13], label=Stationen[13])
              MÜG, = ax.plot(x_Werte, alle_y[14], linewidth=2,\
                      color=Colors[14], label=Stationen[14])
              LUE, = ax.plot(x_Werte, alle_y[15], linewidth=2,\
                      color=Colors[15], label=Stationen[15])
              N, = ax.plot(x_Werte, alle_y[16], linewidth=2,\
                      color=Colors[16], label=Stationen[16])
              RATB, = ax.plot(x_Werte, alle_y[17], linewidth=2,\
                      color=Colors[17], label=Stationen[17])
              KRD, = ax.plot(x_Werte, alle_y[18], linewidth=2,\
                      color=Colors[18], label=Stationen[18])
              NE, = ax.plot(x_Werte, alle_y[19], linewidth=2,\
                      color=Colors[19], label=Stationen[19])
              SCH, = ax.plot(x_Werte, alle_y[20], linewidth=2,\
                      color=Colors[20], label=Stationen[20])
              MSM, = ax.plot(x_Werte, alle_y[21], linewidth=2,\
                      color=Colors[21], label=Stationen[21])
              SOE, = ax.plot(x_Werte, alle_y[22], linewidth=2,\
                      color=Colors[22], label=Stationen[22])
              SOL, = ax.plot(x_Werte, alle_y[23], linewidth=2,\
                      color=Colors[23], label=Stationen[23])
              MST, = ax.plot(x_Werte, alle_y[24], linewidth=2,\
                      color=Colors[24], label=Stationen[24])
              DUWS, = ax.plot(x_Werte, alle_y[25], linewidth=2,\
                      color=Colors[25], label=Stationen[25])
              WULF, = ax.plot(x_Werte, alle_y[26], linewidth=2,\
                      color=Colors[26],label=Stationen[26])

              Station = [AA, BIO, BOG, BOT, K, DOE, DDE, SI, ES, HUE, KRL,\
                      LEMF, DDL, MG, MÜG, LUE, N, RATB, KRD, NE, SCH, MSM,\
                      SOE, SOL, MST, DUWS, WULF]

       elif MW == 3:

              Stationen = ["Aachen", "Bielefeld (Ost)", "Bonn",\
                      "Borken-Gemen", "Bottrop", "Duisburg(BHo)",\
                      "Köln", "Datteln(HG)",\
                      "D-Dorf(CS)", "Dortmund-Eving", "Duisburg(BH)",\
                      "Duisburg(Hafen)", "D-Dorf(Eller)", "Simmerath",\
                      "Elsdorf", "Essen(VH)", "Hattingen(BS)", "Hürth",\
                      "Jackerath", "Jüchen(HNK)", "Krefeld(L)",\
                      "Leverkusen(MF)", "D-Dorf(L)", "Münster(G)",\
                      "Nettetal(KK)", "Lünen", "Niederzier", \
                      "Ratingen(TB)", "Köln(RD)", "Nepthen", "Schwerte",\
                      "Soest", "Solingen", "Mülheim(ST)", "Aachen(WS)",\
                      "Bielefeld(DS)", "Bielefeld(HS)", "Dortmund(BS)",\
                      "Duisburg(KGS)", "Essen(GS)", "Essen-Ost",\
                      "Gelsenkirchen(KSS)", "Gladbeck(GS)", "Hagen(GvGR)",\
                      "Köln(Ring)", "Köln(Turnier)",\
                      "Mönchengladbach(FES)", "Münster(WS)",\
                      "Oberhausen(MS)", "Solingen(KAS)", "Wuppertal(G)",\
                      "Duisburg(WS)", "Warstein", "Wuppertal(LF)"]

              AA, = ax.plot(x_Werte, alle_y[0], linewidth=2,\
                      color=Colors[0], label=Stationen[0])
              BIO, = ax.plot(x_Werte, alle_y[1], linewidth=2,\
                      color=Colors[1], label=Stationen[1])
              BN, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                      color=Colors[2], label=Stationen[2])
              BOG, = ax.plot(x_Werte, alle_y[3], linewidth=2,\
                      color=Colors[3], label=Stationen[3])
              BOT, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                      color=Colors[4], label=Stationen[4])
              DUBHo, = ax.plot(x_Werte, alle_y[5], linewidth=2,\
                      color=Colors[5], label=Stationen[5])
              K, = ax.plot(x_Werte, alle_y[6], linewidth=2,\
                      color=Colors[6], label=Stationen[6])
              DAHG, = ax.plot(x_Werte, alle_y[7], linewidth=2,\
                      color=Colors[7], label=Stationen[7])
              DDCS, = ax.plot(x_Werte, alle_y[8], linewidth=2,\
                      color=Colors[8], label=Stationen[8])
              DOE, = ax.plot(x_Werte, alle_y[9], linewidth=2,\
                      color=Colors[9], label=Stationen[9])
              DUBH, = ax.plot(x_Werte, alle_y[10], linewidth=2,\
                      color=Colors[10], label=Stationen[10])
              DUH, = ax.plot(x_Werte, alle_y[11], linewidth=2,\
                      color=Colors[11], label=Stationen[11])
              DDE, = ax.plot(x_Werte, alle_y[12], linewidth=2,\
                      color=Colors[12], label=Stationen[12])
              SI, = ax.plot(x_Werte, alle_y[13], linewidth=2,\
                      color=Colors[13], label=Stationen[13])
              ELS, = ax.plot(x_Werte, alle_y[14], linewidth=2,\
                      color=Colors[14], label=Stationen[14])
              EVH, = ax.plot(x_Werte, alle_y[15], linewidth=2,\
                      color=Colors[15], label=Stationen[15])
              HABS, = ax.plot(x_Werte, alle_y[16], linewidth=2,\
                      color=Colors[16], label=Stationen[16])
              HUE, = ax.plot(x_Werte, alle_y[17], linewidth=2,\
                      color=Colors[17], label=Stationen[17])
              JA, = ax.plot(x_Werte, alle_y[18], linewidth=2,\
                      color=Colors[18], label=Stationen[18])
              JHNK, = ax.plot(x_Werte, alle_y[19], linewidth=2,\
                      color=Colors[19], label=Stationen[19])
              KRL, = ax.plot(x_Werte, alle_y[20], linewidth=2,\
                      color=Colors[20], label=Stationen[20])
              LEMF, = ax.plot(x_Werte, alle_y[21], linewidth=2,\
                      color=Colors[21], label=Stationen[21])
              DDL, = ax.plot(x_Werte, alle_y[22], linewidth=2,\
                      color=Colors[22], label=Stationen[22])
              MÜG, = ax.plot(x_Werte, alle_y[23], linewidth=2,\
                      color=Colors[23], label=Stationen[23])
              NEKK, = ax.plot(x_Werte, alle_y[24], linewidth=2,\
                      color=Colors[24], label=Stationen[24])
              LUE, = ax.plot(x_Werte, alle_y[25], linewidth=2,\
                      color=Colors[25], label=Stationen[25])
              N, = ax.plot(x_Werte, alle_y[26], linewidth=2,\
                      color=Colors[26], label=Stationen[26])
              RATB, = ax.plot(x_Werte, alle_y[27], linewidth=2,\
                      color=Colors[27], label=Stationen[27])
              KRD, = ax.plot(x_Werte, alle_y[28], linewidth=2,\
                      color=Colors[28], label=Stationen[28])
              NE, = ax.plot(x_Werte, alle_y[29], linewidth=2,\
                      color=Colors[29], label=Stationen[29])
              SCH, = ax.plot(x_Werte, alle_y[30], linewidth=2,\
                      color=Colors[30], label=Stationen[30])
              SOE, = ax.plot(x_Werte, alle_y[31], linewidth=2,\
                      color=Colors[31], label=Stationen[31])
              SOL, = ax.plot(x_Werte, alle_y[32], linewidth=2,\
                      color=Colors[32], label=Stationen[32])
              MST, = ax.plot(x_Werte, alle_y[33], linewidth=2,\
                      color=Colors[33], label=Stationen[33])
              AAWS, = ax.plot(x_Werte, alle_y[34], linewidth=2,\
                      color=Colors[34], label=Stationen[34])
              BDS, = ax.plot(x_Werte, alle_y[35], linewidth=2,\
                      color=Colors[35], label=Stationen[35])
              BHS, = ax.plot(x_Werte, alle_y[36], linewidth=2,\
                      color=Colors[36], label=Stationen[36])
              DOBS, = ax.plot(x_Werte, alle_y[37], linewidth=2,\
                      color=Colors[37], label=Stationen[37])
              DUKG, = ax.plot(x_Werte, alle_y[38], linewidth=2,\
                      color=Colors[38], label=Stationen[38])
              EGS, = ax.plot(x_Werte, alle_y[39], linewidth=2,\
                      color=Colors[39], label=Stationen[39])
              EO, = ax.plot(x_Werte, alle_y[40], linewidth=2,\
                      color=Colors[40], label=Stationen[40])
              GEK, = ax.plot(x_Werte, alle_y[41], linewidth=2,\
                      color=Colors[41], label=Stationen[41])
              GGS, = ax.plot(x_Werte, alle_y[42], linewidth=2,\
                      color=Colors[42], label=Stationen[42])
              HAG, = ax.plot(x_Werte, alle_y[43], linewidth=2,\
                      color=Colors[43], label=Stationen[43])
              KR, = ax.plot(x_Werte, alle_y[44], linewidth=2,\
                      color=Colors[44], label=Stationen[44])
              KT, = ax.plot(x_Werte, alle_y[45], linewidth=2,\
                      color=Colors[45], label=Stationen[45])
              MGFE, = ax.plot(x_Werte, alle_y[46], linewidth=2,\
                      color=Colors[46], label=Stationen[46])
              MWS, = ax.plot(x_Werte, alle_y[47], linewidth=2,\
                      color=Colors[47], label=Stationen[47])
              OBMS, = ax.plot(x_Werte, alle_y[48], linewidth=2,\
                      color=Colors[48], label=Stationen[48])
              SOKA, = ax.plot(x_Werte, alle_y[49], linewidth=2,\
                      color=Colors[49], label=Stationen[49])
              WUG, = ax.plot(x_Werte, alle_y[50], linewidth=2,\
                      color=Colors[50], label=Stationen[50])
              DUWS, = ax.plot(x_Werte, alle_y[51], linewidth=2,\
                      color=Colors[51], label=Stationen[51])
              WAR, = ax.plot(x_Werte, alle_y[52], linewidth=2,\
                      color=Colors[52], label=Stationen[52])
              WULF, = ax.plot(x_Werte, alle_y[53], linewidth=2,\
                      color=Colors[53], label=Stationen[53])
              
              Station = [AA, BIO, BN, BOG, BOT, DUBHo, K, DAHG, DDCS, DOE,\
                      DUBH, DUH, DDE, SI, ELS, EVH, HABS, HUE, JA, JHNK, KRL,\
                      LEMF, DDL, MÜG, NEKK, LUE, N, RATB, KRD, NE, SCH, SOE,\
                      SOL, MST, AAWS, BDS, BHS, DOBS, DUKG, EGS, EO, GEK, GGS,\
                      HAG, KR, KT, MGFE, MWS, OBMS, SOKA, WUG, DUWS, WAR, WULF]      

       elif MW == 4:

              Stationen = ["Bottrop", "Duisburg(BHo)", "Datteln(HG)",\
                            "Duisburg(BH)", "D-Dorf(Eller)", "Essen(VH)",\
                            "Duisburg(WS)"]

              BOT, = ax.plot(x_Werte, alle_y[0], linewidth=2,\
                      color=Colors[0], label=Stationen[0])
              DUBHo, = ax.plot(x_Werte, alle_y[1], linewidth=2,\
                      color=Colors[1], label=Stationen[1])
              DAHG, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                      color=Colors[2], label=Stationen[2])
              DUBH, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                      color=Colors[3], label=Stationen[3])
              DDE, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                      color=Colors[4], label=Stationen[4])
              EVH, = ax.plot(x_Werte, alle_y[5], linewidth=2,\
                      color=Colors[5], label=Stationen[5])
              DUWS, = ax.plot(x_Werte, alle_y[6], linewidth=2,\
                      color=Colors[6], label=Stationen[6])

              Station = [BOT, DUBHo, DAHG, DUBH, DDE, EVH, DUWS]

       elif MW == 5 or MW == 6:

              Stationen = ["Aachen", "Bonn", "Bottrop", "Köln",\
                      "Duisburg(BH)", "Duisburg(Hafen)", "Simmerath",\
                      "Essen(VH)", "Jackerath", "Krefeld", "Mönchengladbach",\
                      "Lünen", "Köln(RD)", "Nepthen", "Soest", "Solingen",\
                      "Unna", "Aachen(WS)", "Köln(Ring)", "Köln(Turnier)",\
                      "Duisburg(WS)", "Warstein"]

              AA, = ax.plot(x_Werte, alle_y[0], linewidth=2,\
                      color=Colors[0], label=Stationen[0])
              BN, = ax.plot(x_Werte, alle_y[1], linewidth=2,\
                      color=Colors[1], label=Stationen[1])
              BOT, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                      color=Colors[2], label=Stationen[2])
              K, = ax.plot(x_Werte, alle_y[3], linewidth=2,\
                      color=Colors[3], label=Stationen[3])
              DUBH, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                      color=Colors[4], label=Stationen[4])
              DUH, = ax.plot(x_Werte, alle_y[5], linewidth=2,\
                      color=Colors[5], label=Stationen[5])
              SI, = ax.plot(x_Werte, alle_y[6], linewidth=2,\
                      color=Colors[6], label=Stationen[6])
              EVH, = ax.plot(x_Werte, alle_y[7], linewidth=2,\
                      color=Colors[7], label=Stationen[7])
              JA, = ax.plot(x_Werte, alle_y[8], linewidth=2,\
                      color=Colors[8], label=Stationen[8])
              KRE, = ax.plot(x_Werte, alle_y[9], linewidth=2,\
                      color=Colors[9], label=Stationen[9])
              MG, = ax.plot(x_Werte, alle_y[10], linewidth=2,\
                      color=Colors[10], label=Stationen[10])
              LUE, = ax.plot(x_Werte, alle_y[11], linewidth=2,\
                      color=Colors[11], label=Stationen[11])
              KRD, = ax.plot(x_Werte, alle_y[12], linewidth=2,\
                      color=Colors[12], label=Stationen[12])
              NE, = ax.plot(x_Werte, alle_y[13], linewidth=2,\
                      color=Colors[13], label=Stationen[13])
              SOE, = ax.plot(x_Werte, alle_y[14], linewidth=2,\
                      color=Colors[14], label=Stationen[14])
              SOL, = ax.plot(x_Werte, alle_y[15], linewidth=2,\
                      color=Colors[15], label=Stationen[15])
              UN, = ax.plot(x_Werte, alle_y[16], linewidth=2,\
                      color=Colors[16], label=Stationen[16])
              AAWS, = ax.plot(x_Werte, alle_y[17], linewidth=2,\
                      color=Colors[17], label=Stationen[17])
              KR, = ax.plot(x_Werte, alle_y[18], linewidth=2,\
                      color=Colors[18], label=Stationen[18])
              KT, = ax.plot(x_Werte, alle_y[19], linewidth=2,\
                      color=Colors[19], label=Stationen[19])
              DUWS, = ax.plot(x_Werte, alle_y[20], linewidth=2,\
                      color=Colors[20], label=Stationen[20])
              WAR, = ax.plot(x_Werte, alle_y[21], linewidth=2,\
                      color=Colors[21], label=Stationen[21])

              Station = [AA, BN, BOT, K, DUBH, DUH, SI, EVH, JA, KRE, MG, LUE,\
                            KRD, NE, SOE, SOL, UN, AAWS, KR, KT, DUWS, WAR]

       elif MW == 7 or MW == 8:

              Stationen = ["Aachen", "Bonn", "Bottrop", "Duisburg(BHo)",\
                      "Köln", "Dortmund-Eving", "Duisburg(BH)",\
                      "Duisburg(Hafen)", "Simmerath", "Essen(VH)",\
                      "Hattingen(BS)", "Jackerath", "Krefeld",\
                      "Mönchengladbach", "Nettetal(KK)", "Lünen",\
                      "Niederzier", "D-Dorf(RH)", "Köln(RD)", "Nepthen",\
                      "Schwerte", "Marl(SM)", "Soest", "Solingen",\
                      "Mülheim(ST)", "Unna", "Aachen(WS)", "Köln(Ring)",\
                      "Köln(Turnier)", "Duisburg(WS)", "Warstein", "Witten(A)"]

              AA, = ax.plot(x_Werte, alle_y[0], linewidth=2,\
                     color=Colors[0], label=Stationen[0])
              BN, = ax.plot(x_Werte, alle_y[1], linewidth=2,\
                     color=Colors[1], label=Stationen[1])
              BOT, = ax.plot(x_Werte, alle_y[2], linewidth=2,\
                     color=Colors[2], label=Stationen[2])
              DUBHo, = ax.plot(x_Werte, alle_y[3], linewidth=2,\
                     color=Colors[3], label=Stationen[3])
              K, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                     color=Colors[4], label=Stationen[4])
              DOE, = ax.plot(x_Werte, alle_y[5], linewidth=2,\
                     color=Colors[5], label=Stationen[5])
              DUBH, = ax.plot(x_Werte, alle_y[6], linewidth=2,\
                     color=Colors[6], label=Stationen[6])
              DUH, = ax.plot(x_Werte, alle_y[7], linewidth=2,\
                     color=Colors[7], label=Stationen[7])
              SI, = ax.plot(x_Werte, alle_y[8], linewidth=2,\
                     color=Colors[8], label=Stationen[8])
              EVH, = ax.plot(x_Werte, alle_y[9], linewidth=2,\
                     color=Colors[9], label=Stationen[9])
              HABS, = ax.plot(x_Werte, alle_y[10], linewidth=2,\
                     color=Colors[10], label=Stationen[10])
              JA, = ax.plot(x_Werte, alle_y[11], linewidth=2,\
                     color=Colors[11], label=Stationen[11])
              KRE, = ax.plot(x_Werte, alle_y[12], linewidth=2,\
                     color=Colors[12], label=Stationen[12])
              MG, = ax.plot(x_Werte, alle_y[13], linewidth=2,\
                     color=Colors[13], label=Stationen[13])
              NEKK, = ax.plot(x_Werte, alle_y[14], linewidth=2,\
                     color=Colors[14], label=Stationen[14])
              LUE, = ax.plot(x_Werte, alle_y[15], linewidth=2,\
                     color=Colors[15], label=Stationen[15])
              N, = ax.plot(x_Werte, alle_y[4], linewidth=2,\
                     color=Colors[16], label=Stationen[16])
              DDRH, = ax.plot(x_Werte, alle_y[17], linewidth=2,\
                     color=Colors[17], label=Stationen[17])
              KRD, = ax.plot(x_Werte, alle_y[18], linewidth=2,\
                     color=Colors[18], label=Stationen[18])
              NE, = ax.plot(x_Werte, alle_y[19], linewidth=2,\
                     color=Colors[19], label=Stationen[19])
              SCH, = ax.plot(x_Werte, alle_y[20], linewidth=2,\
                     color=Colors[20], label=Stationen[20])
              MSM, = ax.plot(x_Werte, alle_y[21], linewidth=2,\
                     color=Colors[21], label=Stationen[21])
              SOE, = ax.plot(x_Werte, alle_y[22], linewidth=2,\
                     color=Colors[22], label=Stationen[22])
              SOL, = ax.plot(x_Werte, alle_y[23], linewidth=2,\
                     color=Colors[23], label=Stationen[23])
              MST, = ax.plot(x_Werte, alle_y[24], linewidth=2,\
                     color=Colors[24], label=Stationen[24])
              UN, = ax.plot(x_Werte, alle_y[25], linewidth=2,\
                     color=Colors[25], label=Stationen[25])
              AAWS, = ax.plot(x_Werte, alle_y[26], linewidth=2,\
                     color=Colors[26], label=Stationen[26])
              KR, = ax.plot(x_Werte, alle_y[27], linewidth=2,\
                     color=Colors[27], label=Stationen[27])
              KT, = ax.plot(x_Werte, alle_y[28], linewidth=2,\
                     color=Colors[28], label=Stationen[28])
              DUWS, = ax.plot(x_Werte, alle_y[29], linewidth=2,\
                     color=Colors[29], label=Stationen[29])
              WAR, = ax.plot(x_Werte, alle_y[30], linewidth=2,\
                     color=Colors[30], label=Stationen[30])
              WIT, = ax.plot(x_Werte, alle_y[31], linewidth=2,\
                     color=Colors[31], label=Stationen[31])

              Station = [AA, BN, BOT, DUBHo, K, DOE, DUBH, DUH, SI, EVH, HABS,\
                     JA, KRE, MG, NEKK, LUE, N, DDRH, KRD, NE, SCH, MSM,\
                     SOE, SOL, MST, UN, AAWS, KR, KT, DUWS, WAR, WIT] 

       plt.subplots_adjust(left=0.2)
       plt.grid(True)
       plt.legend(bbox_to_anchor=(0.97, 1.15))
       plt.title(f"{Labels1[MW]} - Messwerte der letzten {TB_Tage} Tage")
       plt.ylabel("Messwert")
       plt.xlabel("Datum mit Uhrzeit")
       plt.xticks(x_Werte[::10])
       fig.autofmt_xdate(rotation=90)

       Aktiviert = [True, True, True, True, True, True, True, True, True,\
               True, True, True, True, True, True, True, True, True, True,\
               True, True, True, True, True, True, True, True, True, True,\
               True, True, True, True, True, True, True, True, True, True,\
               True, True, True, True, True, True, True, True, True, True,\
               True, True, True, True, True, True, True, True]
                     
       #links/rechts, oben/unten , Breite, Höhe
       axCheckButton = plt.axes([0.01, 0.05, 0.15, 0.9]) 
       Checkbox = CheckButtons(axCheckButton, Stationen, Aktiviert)

       # Die Funktion "Graph" wurde von der von dem Beispielprogramm
       # der Matplotlib für Check Buttons übernommen. Es wurden
       # Variablen passend zum Programm ausgetauscht.
       # Quelle dazu ist in der Dokumentation angegeben.
       # Es wurden Zeilen 25-28 des Codes übernommen.
       
       def Graph(label):
              index = Stationen.index(label)
              Station[index].set_visible(not Station[index].get_visible())
              plt.draw()

       Checkbox.on_clicked(Graph)

       def Beenden(event):
              plt.savefig(format="pdf", fname="Plot von Messwerten.pdf")
              plt.close()

       axButton_Schließen = plt.axes([0.85, 0.01, 0.05, 0.03])
       Button_Schließen = Button(axButton_Schließen, "Schließen")
       Button_Schließen.on_clicked(Beenden)
    
plt.show()
